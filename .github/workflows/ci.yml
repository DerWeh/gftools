name: Continuous Integration
on:
  push:
    paths:
      - "gftool/**"
      - "docs/**"
  pull_request:
    types: [opened]
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true
jobs:
  code-change:
    runs-on: ubuntu-latest
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          paths_ignore: '["docs/**"]' # skip unit-tests if only docs were changed
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
  tests:
    needs: code-change
    if: ${{ needs.code-change.outputs.should_skip != 'true'}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.12"] # check oldest and latest supported version
        other-os: [false]
        include: # checking one version in the middle is enough
          - os: windows-latest
            python-version: "3.8"
            other-os: true
          - os: macos-latest
            python-version: "3.8"
            other-os: true
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.other-os }} # don't cancel due to OS specific failures
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements-dev.txt
          pip install .[test,fast]
      - name: Test code
        run: pytest --cov=gftool --cov-report=xml -v
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          env_vars: OS,PYTHON
          verbose: True
      - name: Coverage
        run: codecov
  documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[docs]
      - name: Test documentation
        run: |
          sphinx-build -d docs/build/doctrees docs/source docs/build/html
          sphinx-build -b doctest -d docs/build/doctrees docs/source docs/build/doctest
